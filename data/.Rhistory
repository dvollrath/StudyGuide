y = c(0, 1, 2, 0, 1, 2, 0, 1, 2), # latitude
d = c(2,2,4,2,2,4,4,4,4)) # data value for that square
rbig <- rasterFromXYZ(dfbig) # convert that data to a raster object
rbig # look at summary information on that raster
plot(rbig) # plot the raster
dev.off()
par(bty='n') # sets the boundaries of plots to blank
par(xaxt='n')
par(yaxt='n')
# Create a dataframe, with data on the ID of a territory
dfbig = data.frame(x = c(0, 0, 0, 1, 1, 1, 2, 2, 2), # longitude
y = c(0, 1, 2, 0, 1, 2, 0, 1, 2), # latitude
d = c(2,2,4,2,2,4,4,4,4)) # data value for that square
rbig <- rasterFromXYZ(dfbig) # convert that data to a raster object
rbig # look at summary information on that raster
plot(rbig,legend=FALSE) # plot the raster
dev.off()
par(bty='n') # sets the boundaries of plots to blank
par(xaxt='n')
par(yaxt='n')
# Create a dataframe, with data on the ID of a territory
dfbig = data.frame(x = c(0, 0, 0, 1, 1, 1, 2, 2, 2), # longitude
y = c(0, 1, 2, 0, 1, 2, 0, 1, 2), # latitude
d = c(2,2,4,2,2,4,4,4,4)) # data value for that square
rbig <- rasterFromXYZ(dfbig) # convert that data to a raster object
rbig # look at summary information on that raster
plot(rbig,legend=FALSE) # plot the raster
legend("bottom", legend = c("Territory A","Territory B"), horiz=TRUE)
# Create a dataframe, with data on the ID of a territory
dfbig = data.frame(x = c(0, 0, 0, 1, 1, 1, 2, 2, 2), # longitude
y = c(0, 1, 2, 0, 1, 2, 0, 1, 2), # latitude
d = c(2,2,4,2,2,4,4,4,4)) # data value for that square
rbig <- rasterFromXYZ(dfbig) # convert that data to a raster object
rbig # look at summary information on that raster
plot(rbig) # plot the raster
dev.off()
# Create a dataframe, with data on the ID of a territory
dfbig = data.frame(x = c(0, 0, 0, 1, 1, 1, 2, 2, 2), # longitude
y = c(0, 1, 2, 0, 1, 2, 0, 1, 2), # latitude
d = c(2,2,4,2,2,4,4,4,4)) # data value for that square
rbig <- rasterFromXYZ(dfbig) # convert that data to a raster object
rbig # look at summary information on that raster
plot(rbig) # plot the raster
p <- rasterToPolygons(rbig,fun=NULL,n=8,digits=3,dissolve=TRUE)
p # summary information on the shapes
plot(p) # plot the polygons
library(raster) # loads the raster package for use
dev.off()
# Create a dataframe, with data on the ID of a territory
dfbig = data.frame(x = c(0, 0, 0, 1, 1, 1, 2, 2, 2), # longitude
y = c(0, 1, 2, 0, 1, 2, 0, 1, 2), # latitude
d = c(2,2,4,2,2,4,4,4,4)) # data value for that square
rbig <- rasterFromXYZ(dfbig) # convert that data to a raster object
rbig # look at summary information on that raster
plot(rbig) # plot the raster
# Create a polygon version of that raster
p <- rasterToPolygons(rbig,fun=NULL,n=8,digits=3,dissolve=TRUE)
p # summary information on the shapes
plot(p,add=TRUE) # plot the polygons
plot(p)
dfdata = data.frame(x = c(0, 0, 0, 1, 1, 1, 2, 2, 2), # long
y = c(0, 1, 2, 0, 1, 2, 0, 1, 2), # lat
d = c(-1,-2,5,-3,-2,4,6,3,8)) # data values
rdata <- rasterFromXYZ(dfdata) # create raster object
plot(rdata)
s <- zonal(rdata,rbig,fun='mean',digits=3,na.rm=FALSE,progress='text')
s
View(s)
p
colnames(p)[1] <- "zone"
colnames(p@data)[1] <- "zone"
p
pmerged <- merge(p,s,by="zone")
pmerged
s <- zonal(rdata,p,fun='mean',digits=3,na.rm=FALSE,progress='text')
s <- extract(rdata,p,fun='mean',na.rm=FALSE)
s <- extract(rdata,p,fun=mean)
s
z <- zonal(rdata,rbig,fun='mean',digits=3,na.rm=FALSE,progress='text')
z
s <- extract(rdata,p,fun=mean,sp=TRUE)
p
s
install.packages(c("devtools", "plotly"))
library(devtools)
install_github("ropensci/plotly")
library(plotly)
ggiris <- qplot(Petal.Width, Sepal.Length, data = iris, color = Species)
py <- plotly(username="dvollrath", key="g86hGs9hiBrHVnbWlYGr")
py <- plot_ly(username="dvollrath", key="g86hGs9hiBrHVnbWlYGr")
py$ggplotly(ggiris)
py
fig <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
fig
source('~/Dropbox/Project/StudyGuide/code/start.r')
data("pwt9.1")
install.packages("pwt9")
data("pwt9.1")
data(pwt9.1)
df <- data("pwt9.1")
data("pwt9.1",package=pwt9)
library(pwt9)
data("pwt9.1")
force(pwt9.1)
p <- pwt9.1
p$lngdppc <- log(p$rgdpe) - log(p$pop)
newp <- p[ which(isocode=='US'),]
newp <- p[ which(p$isocode=='US'),]
newp <- p[ which(p$isocode=='USA'),]
fig <- plot_ly(newp, x = ~year, y = ~lngdppc, name = 'USA', mode = 'lines+markers')
api_create(fig, filename = "pwt-usa-lngdppc")
newp <- p[ which(p$isocode==c('USA','CAN')),]
View(newp)
newp <- p[ which(p$isocode %in% c("USA", "CAN")),]
View(newp)
fig <- plot_ly(newp, x = ~year, y = ~lngdppc, linetype = ~isocode, type = 'scatter', mode = 'lines+markers')
fig
api_create(fig, filename = "pwt-stable-lngdppc")
data("pwt9.1")
p <- pwt9.1
p$lngdppc <- log(p$rgdpna) - log(p$pop)
stable <- p[ which(p$isocode %in% c("USA", "CAN", "MEX", "GBR", "AUS")),]
catchup <- p[ which(p$isocode %in% c("USA", "DEU", "JPN", "KOR", "CHN","NGA")),]
fig <- plot_ly(stable, x = ~year, y = ~lngdppc, linetype = ~country, type = 'scatter', mode = 'lines+markers')
fig %>% layout(title = 'Log GDP per capita for stable growth countries',
xaxis = list(title = 'Year'),
yaxis = list (title = 'Log GDP per capita'))
api_create(fig, filename = "pwt-stable-lngdppc")
fig <- plot_ly(stable, x = ~year, y = ~lngdppc, linetype = ~country, type = 'scatter', mode = 'lines+markers')
fig %>% layout(title = 'Log GDP per capita for stable growth countries',
xaxis = list(title = 'Year'),
yaxis = list (title = 'Log GDP per capita', range=c(6,11)))
api_create(fig, filename = "pwt-stable-lngdppc")
fig <- plot_ly(stable, x = ~year, y = ~lngdppc, linetype = ~country, type = 'scatter', mode = 'lines+markers')
fig %>% layout(title = 'Log GDP per capita for stable growth countries',
xaxis = list(title = 'Year'),
yaxis = list (title = 'Log GDP per capita', range=c(6,11)))
api_create(fig, filename = "pwt-stable-lngdppc")
fig %>% layout(title = 'Log GDP per capita for stable growth countries',
xaxis = list(title = 'Year'),
yaxis = list (title = 'Log GDP per capita', range=c(6,11)))
fig
fig <- plot_ly(stable, x = ~year, y = ~lngdppc, linetype = ~country, type = 'scatter', mode = 'lines+markers')
fig %>% layout(title = 'Log GDP per capita for stable growth countries',
xaxis = list(title = 'Year'),
yaxis = list (title = 'Log GDP per capita', range=c(6,11)))
fig
fig <- plot_ly(stable, x = ~year, y = ~lngdppc, linetype = ~country, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = 'Log GDP per capita for stable growth countries',
xaxis = list(title = 'Year'),
yaxis = list (title = 'Log GDP per capita', range=c(6,11)))
fig
api_create(fig, filename = "pwt-stable-lngdppc")
fig <- plot_ly(catchup, x = ~year, y = ~lngdppc, linetype = ~country, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = 'Log GDP per capita for catch-up growth countries',
xaxis = list(title = 'Year'),
yaxis = list (title = 'Log GDP per capita', range=c(6,11)))
api_create(fig, filename = "pwt-catchup-lngdppc")
fig <- plot_ly(catchup, x = ~year, y = ~lngdppc, linetype = ~country, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = 'Log GDP per capita for catch-up growth countries',
xaxis = list(title = 'Year'),
yaxis = list (title = 'Log GDP per capita', range=c(6,11)),
hovermode="x unified")
fig
api_create(fig, filename = "pwt-catchup-lngdppc")
p$lngdppc <- round(log(p$rgdpna) - log(p$pop),digits=2)
stable <- p[ which(p$isocode %in% c("USA", "CAN", "MEX", "GBR", "AUS")),]
catchup <- p[ which(p$isocode %in% c("USA", "DEU", "JPN", "KOR", "CHN","NGA")),]
source('~/Dropbox/Project/StudyGuide/code/start.r')
fig <- plot_ly(stable, x = ~year, y = ~lngdppc, linetype = ~country, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title('Log GDP per capita for stable growth countries',adj=0),
xaxis = list(title = 'Year'),
yaxis = list (title = 'Log GDP per capita', range=c(6,11)),
hovermode="x unified")
Sys.getenv("R_PROFILE_USER")
Sys.getenv("plotly_username")
usethis::edit_r_profile()
source('~/.Rprofile')
Sys.getenv("plotly_username")
source('~/Dropbox/Project/StudyGuide/code/start.r')
p$lag10.lngdppc <- c(NA,p$lngdppc[-nrow(p)])
View(p)
View(p)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
source('~/Dropbox/Project/StudyGuide/code/Guide_PWT_Facts.r')
setwd("~/Dropbox/project/studyguide/data")
source("~/Dropbox/Tools/.Rprofile")
library(devtools)
library(plotly)
library(pwt9)
library(dplyr)
library(OECD)
library(reshape2)
library(WDI)
# Pull PWT into dataframe
data("pwt9.1")
p <- pwt9.1 # copy dataframe for manipulation
p$lngdppc <- round(log(p$rgdpna) - log(p$pop),digits=2) # create log GDP per capita
p$ky <- round(p$rnna/p$rgdpna,digits=2) # create K/Y ratio
p$phil <- round(p$labsh*p$rgdpna/(p$labsh*p$rgdpna+.05*p$rnna),digits=2) # create kludge cost share of labor
# Pull PWT national accounts data into dataframe
p <- read.csv("~/Dropbox/project/studyguide/data/pwt91_na.csv", header=TRUE)
p$scon <- round(p$v_c/p$v_gdp,digits=2) # calculate consump share
p$sgfcf <- round(p$v_i/p$v_gdp,digits=2) # calculate cap formation as share
# Pull PWT national accounts data into dataframe
p <- read.csv("~/Dropbox/project/studyguide/data/pwt91_na.csv", header=TRUE)
p$scon <- round(p$v_c/p$v_gdp,digits=2) # calculate consump share
p$sgfcf <- round(p$v_i/p$v_gdp,digits=2) # calculate cap formation as share
p$sgov <- round(p$v_g/p$v_gdp,digits=2) # calculate consump share
stable <- p[ which(p$countrycode %in% c("USA", "CAN", "MEX", "GBR", "AUS")),]
catchup <- p[ which(p$countrycode %in% c("USA", "DEU", "JPN", "KOR", "CHN","NGA")),]
test <- p[ which(p$countrycode %in% c("ETH", "ZAF","BWA")),]
usa <- p[ which(p$countrycode %in% c("USA")),]
fig <- plot_ly(stable, x = ~year, y = ~sgov, linetype = ~countrycode, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'Government spending share of GDP', x=0),
xaxis = list(title = 'Year'),
yaxis = list (title = 'Government spending share',range = c(0,1)),
hovermode="x unified")
fig
fig <- plot_ly(catchup, x = ~year, y = ~sgov, linetype = ~countrycode, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'Government spending share of GDP', x=0),
xaxis = list(title = 'Year'),
yaxis = list (title = 'Government spending share',range = c(0,1)),
hovermode="x unified")
fig
fig <- plot_ly(stable, x = ~year, y = ~sgov, linetype = ~countrycode, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'Government spending share of GDP', x=0),
xaxis = list(title = 'Year'),
yaxis = list (title = 'Government spending share',range = c(0,1)),
hovermode="x unified")
api_create(fig, filename = "pwt-stable-sgov")
fig <- plot_ly(catchup, x = ~year, y = ~sgov, linetype = ~countrycode, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'Government spending share of GDP', x=0),
xaxis = list(title = 'Year'),
yaxis = list (title = 'Government spending share',range = c(0,1)),
hovermode="x unified")
api_create(fig, filename = "pwt-catchup-sgov")
p <-
p %>%
group_by(isocode) %>%
mutate(lag10.lngdppc = dplyr::lag(lngdppc, n = 10, default = NA))
p$g10.lngdppc <- (p$lngdppc - p$lag10.lngdppc)/10
# just need the catchup group
catchup <- p[ which(p$isocode %in% c("USA", "DEU", "JPN", "KOR", "CHN","NGA")),]
fig <- plot_ly(stable, x = ~csh_g, y = ~g10.lngdppc, linetype = ~country, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'Growth and government spending', x=0),
xaxis = list(title = 'Gov spending share of GDP'),
yaxis = list (title = '10-year growth rate'),
hovermode="x unified")
fig
# Pull PWT into dataframe
data("pwt9.1")
p <- pwt9.1 # copy dataframe for manipulation
p$lngdppc <- round(log(p$rgdpna) - log(p$pop),digits=2) # create log GDP per capita
p$ky <- round(p$rnna/p$rgdpna,digits=2) # create K/Y ratio
p$phil <- round(p$labsh*p$rgdpna/(p$labsh*p$rgdpna+.05*p$rnna),digits=2) # create kludge cost share of labor
# subset PWT into stable and catchup groups
stable <- p[which(p$isocode %in% c("USA", "CAN", "MEX", "GBR", "AUS")),]
catchup <- p[which(p$isocode %in% c("USA", "DEU", "JPN", "KOR", "CHN","NGA")),]
test <- p[which(p$isocode %in% c("ETH", "ZAF","BWA")),]
p <-
p %>%
group_by(isocode) %>%
mutate(lag10.lngdppc = dplyr::lag(lngdppc, n = 10, default = NA))
p$g10.lngdppc <- (p$lngdppc - p$lag10.lngdppc)/10
# just need the catchup group
catchup <- p[ which(p$isocode %in% c("USA", "DEU", "JPN", "KOR", "CHN","NGA")),]
fig <- plot_ly(stable, x = ~csh_g, y = ~g10.lngdppc, linetype = ~country, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'Growth and government spending', x=0),
xaxis = list(title = 'Gov spending share of GDP'),
yaxis = list (title = '10-year growth rate'),
hovermode="x unified")
fig
fig <- plot_ly(catchup, x = ~csh_g, y = ~g10.lngdppc, linetype = ~country, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'Growth and government spending', x=0),
xaxis = list(title = 'Gov spending share of GDP'),
yaxis = list (title = '10-year growth rate'),
hovermode="x unified")
fig
p <-
p %>%
group_by(isocode) %>%
mutate(lag10.lngdppc = dplyr::lag(lngdppc, n = 10, default = NA))
p$g10.lngdppc <- (p$lngdppc - p$lag10.lngdppc)/10
# just need the catchup group
catchup <- p[ which(p$isocode %in% c("USA", "DEU", "JPN", "KOR", "CHN")),]
fig <- plot_ly(catchup, x = ~csh_g, y = ~g10.lngdppc, linetype = ~country, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'Growth and government spending', x=0),
xaxis = list(title = 'Gov spending share of GDP'),
yaxis = list (title = '10-year growth rate'),
hovermode="x unified")
fig
fig <- plot_ly(catchup, x = ~csh_g, y = ~g10.lngdppc, linetype = ~country, type = 'scatter', mode = 'markers')
fig <- layout(fig, title = list(text = 'Growth and government spending', x=0),
xaxis = list(title = 'Gov spending share of GDP'),
yaxis = list (title = '10-year growth rate'),
hovermode="x unified")
fig
fig <- plot_ly(catchup, x = ~csh_g, y = ~g10.lngdppc, text=~year,
color = ~isocode,
colors = pal,
type = 'scatter',
mode = 'markers',
hovertemplate = paste("<b>%{text}</b><br>",
"%{yaxis.title.text}: %{y:.2f}<br>",
"%{xaxis.title.text}: %{x:.2f}<br>"),
marker = list(size = 7)
)
fig <- layout(fig, title=list(text = 'Government and growth', x= 0),
xaxis = list(title = 'Gov. spending share of GDP',range=c(6,11)),
yaxis = list (title = '10-year growth rate')
)
pal <- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ffff33')
pal <- setNames(pal, c("CHN", "DEU", "JPN","KOR","USA"))
fig <- plot_ly(catchup, x = ~csh_g, y = ~g10.lngdppc, text=~year,
color = ~isocode,
colors = pal,
type = 'scatter',
mode = 'markers',
hovertemplate = paste("<b>%{text}</b><br>",
"%{yaxis.title.text}: %{y:.2f}<br>",
"%{xaxis.title.text}: %{x:.2f}<br>"),
marker = list(size = 7)
)
fig <- layout(fig, title=list(text = 'Government and growth', x= 0),
xaxis = list(title = 'Gov. spending share of GDP',range=c(6,11)),
yaxis = list (title = '10-year growth rate')
)
fig
fig <- plot_ly(catchup, x = ~csh_g, y = ~g10.lngdppc, text=~year,
color = ~isocode,
type = 'scatter',
mode = 'markers',
hovertemplate = paste("<b>%{text}</b><br>",
"%{yaxis.title.text}: %{y:.2f}<br>",
"%{xaxis.title.text}: %{x:.2f}<br>"),
marker = list(size = 7)
)
fig <- layout(fig, title=list(text = 'Government and growth', x= 0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = '10-year growth rate')
)
fig
pal <- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ffff33')
pal <- setNames(pal, c("CHN", "DEU", "JPN","KOR","USA"))
fig <- plot_ly(catchup, x = ~csh_g, y = ~g10.lngdppc, text=~year,
color = ~isocode,
type = 'scatter',
mode = 'markers',
hovertemplate = paste("<b>%{text}</b><br>",
"%{yaxis.title.text}: %{y:.2f}<br>",
"%{xaxis.title.text}: %{x:.2f}<br>"),
marker = list(size = 7)
)
fig <- layout(fig, title=list(text = 'Government and growth', x= 0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = '10-year growth rate')
)
fig
# Pull PWT national accounts data into dataframe
p <- read.csv("~/Dropbox/project/studyguide/data/pwt91_na.csv", header=TRUE)
p$scon <- round(p$v_c/p$v_gdp,digits=2) # calculate consump share
p$sgfcf <- round(p$v_i/p$v_gdp,digits=2) # calculate cap formation as share
p$sgov <- round(p$v_g/p$v_gdp,digits=2) # calculate consump share
stable <- p[ which(p$countrycode %in% c("USA", "CAN", "MEX", "GBR", "AUS")),]
catchup <- p[ which(p$countrycode %in% c("USA", "DEU", "JPN", "KOR", "CHN","NGA")),]
test <- p[ which(p$countrycode %in% c("ETH", "ZAF","BWA")),]
usa <- p[ which(p$countrycode %in% c("USA")),]
fig <- plot_ly(stable, x = ~csh_g, y = ~lngdppc, linetype = ~country, type = 'scatter')
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita', range=c(6,11)),
hovermode="x unified")
fig
# Pull PWT into dataframe
data("pwt9.1")
p <- pwt9.1 # copy dataframe for manipulation
p$lngdppc <- round(log(p$rgdpna) - log(p$pop),digits=2) # create log GDP per capita
p$ky <- round(p$rnna/p$rgdpna,digits=2) # create K/Y ratio
p$phil <- round(p$labsh*p$rgdpna/(p$labsh*p$rgdpna+.05*p$rnna),digits=2) # create kludge cost share of labor
# subset PWT into stable and catchup groups
stable <- p[which(p$isocode %in% c("USA", "CAN", "MEX", "GBR", "AUS")),]
catchup <- p[which(p$isocode %in% c("USA", "DEU", "JPN", "KOR", "CHN","NGA")),]
test <- p[which(p$isocode %in% c("ETH", "ZAF","BWA")),]
fig <- plot_ly(stable, x = ~csh_g, y = ~lngdppc, linetype = ~country, type = 'scatter')
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita', range=c(6,11)),
hovermode="x unified")
fig
fig <- plot_ly(stable, x = ~csh_g, y = ~lngdppc, color = ~country, type = 'scatter', mode='markers')
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita', range=c(6,11)),
hovermode="x unified")
fig
fig <- plot_ly(catchup, x = ~csh_g, y = ~lngdppc, color = ~country, type = 'scatter', mode='markers')
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita', range=c(6,11)),
hovermode="x unified")
fig
all <- p[which(p$isocode %in% c("USA", "CAN", "MEX", "GBR", "DEU","JPN","KOR","CHN")),]
fig <- plot_ly(all, x = ~csh_g, y = ~lngdppc, color = ~country, type = 'scatter', mode='markers')
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita', range=c(6,11)),
hovermode="x unified")
fig
# Pull PWT into dataframe
data("pwt9.1")
p <- pwt9.1 # copy dataframe for manipulation
p$lngdppc <- round(log(p$rgdpna) - log(p$pop),digits=2) # create log GDP per capita
p$ky <- round(p$rnna/p$rgdpna,digits=2) # create K/Y ratio
p$phil <- round(p$labsh*p$rgdpna/(p$labsh*p$rgdpna+.05*p$rnna),digits=2) # create kludge cost share of labor
p <-
p %>%
group_by(isocode) %>%
mutate(lag10.lngdppc = dplyr::lag(lngdppc, n = 10, default = NA))
p$g10.lngdppc <- (p$lngdppc - p$lag10.lngdppc)/10
# subset PWT into stable and catchup groups
stable <- p[which(p$isocode %in% c("USA", "CAN", "MEX", "GBR", "AUS")),]
catchup <- p[which(p$isocode %in% c("USA", "DEU", "JPN", "KOR", "CHN","NGA")),]
test <- p[which(p$isocode %in% c("ETH", "ZAF","BWA")),]
all <- p[which(p$isocode %in% c("USA", "CAN", "MEX", "GBR", "DEU","JPN","KOR","CHN")),]
fig <- plot_ly(all, x = ~csh_g, y = ~g10.lngdppc, color = ~country, type = 'scatter', mode='markers')
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita'),
hovermode="x unified")
fig
all <- p[which(p$isocode %in% c("USA", "MEX", "GBR", "DEU","JPN","KOR","CHN")),]
pal <- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#fff000')
pal <- setNames(pal, c("USA", "MEX", "GBR","DEU","JPN","KOR","CHN"))
fig <- plot_ly(all, x = ~csh_g, y = ~g10.lngdppc, color = ~country, type = 'scatter', mode='markers')
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita'),
hovermode="x unified")
fig
all <- p[which(p$isocode %in% c("USA", "MEX", "GBR", "DEU","JPN","KOR","CHN")),]
pal <- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#fff000')
pal <- setNames(pal, c("USA", "MEX", "GBR","DEU","JPN","KOR","CHN"))
fig <- plot_ly(all, x = ~csh_g, y = ~g10.lngdppc, color = ~country, colors = pal, type = 'scatter', mode='markers')
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita'),
hovermode="x unified")
fig
warnings()
all <- p[which(p$isocode %in% c("USA", "MEX", "GBR", "DEU","JPN","KOR","CHN")),]
pal <- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#ffff33')
pal <- setNames(pal, c("USA", "MEX", "GBR","DEU","JPN","KOR","CHN"))
fig <- plot_ly(all, x = ~csh_g, y = ~g10.lngdppc, color = ~country, colors = pal, type = 'scatter', mode='markers')
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita'),
hovermode="x unified")
fig
all <- p[which(p$isocode %in% c("USA", "MEX", "GBR", "DEU","JPN","KOR","CHN")),]
fig <- plot_ly(all, x = ~csh_g, y = ~g10.lngdppc, color = ~country, type = 'scatter', mode='markers')
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita'),
hovermode="x unified")
fig
all <- p[which(p$isocode %in% c("USA", "MEX", "GBR", "DEU","JPN","KOR","CHN")),]
fig <- plot_ly(all, x = ~csh_g, y = ~g10.lngdppc, line = ~country, type = 'scatter', mode='markers')
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita'),
hovermode="x unified")
fig
all <- p[which(p$isocode %in% c("USA", "MEX", "GBR", "DEU","JPN","KOR","CHN")),]
fig <- plot_ly(all, x = ~csh_g, y = ~g10.lngdppc, linetype = ~country, type = 'scatter', mode='markers')
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita'),
hovermode="x unified")
fig
all <- p[which(p$isocode %in% c("USA", "MEX", "DEU","JPN","KOR","CHN")),]
fig <- plot_ly(all, x = ~csh_g, y = ~g10.lngdppc, linetype = ~country, type = 'scatter', mode='markers', colors = "Set1")
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita'),
hovermode="x unified")
fig
all <- p[which(p$isocode %in% c("USA", "MEX", "DEU","JPN","KOR","CHN")),]
fig <- plot_ly(all, x = ~csh_g, y = ~g10.lngdppc, color = ~country, type = 'scatter', mode='markers', colors = "Set1")
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita'),
hovermode="x unified")
fig
all <- p[which(p$isocode %in% c("USA", "MEX", "DEU","JPN","KOR","CHN")),]
fig <- plot_ly(all, x = ~csh_g, y = ~g10.lngdppc, color = ~country, type = 'scatter', mode='markers', colors = "Set1")
fig <- layout(fig, title = list(text = 'Government and GDP p.c. level', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita'),
hovermode="x unified")
fig
fig <- plot_ly(all, x = ~csh_g, y = ~lngdppc, color = ~country, type = 'scatter', mode='markers', colors = "Set1")
fig <- layout(fig, title = list(text = 'Government and growth', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita'),
hovermode="x unified")
fig
