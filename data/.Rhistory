solved <- list("time" = t, "KAL" = kal_time, "KY" = ky_time, "lny" = lny_time,
"lny_bgp" = lny_bgp, "gK" = gK_time, "gy" = gy_time, "KY_ss" = ky_ss,
"KAL_ss" = kal_ss, "KY_init" = ky_init, "KAL_init" = kal_init,
"gK_init" = gK_init, "gy_init" = gy_init)
return(solved)
}
init = f.solow(k0=1.2)
init$KAL
init$lny
init$lny_bgp
## Set up and plot hypothetical paths of GDP per capita
f.solow <- function(alpha = .3, si=.2, delta=.05, ga=.02, gl=.01, k0=1, a0=1, l0=1, t=1) {
kal_init <- k0/(a0*l0) # initial K/AL ratio
ky_init <- kal_init^(1-alpha) # initial K/Y ratio
ky_ss <- si/(delta+ga+gl) # K/Y steady state
kal_ss <- ky_ss^(1/(1-alpha)) # K/AL steady state
gK_init <- si/ky_init - delta # initial gK
gy_init <- (1-alpha)*(gK_init - ga - gl) + ga # initial gy
u <- tryCatch(
{u = t - min(t)},
error=function(cond) {
return(t)
}
)
conv_term <- (1-alpha)*(delta+ga+gl) # convergence term for exact solution
ky_time <- ky_ss*(1-exp(-1*conv_term*u)) + ky_init*exp(-1*conv_term*u) # K/Y at each t
kal_time <- ky_time^(1/(1-alpha)) # K/AL at each t
lny_time <- (alpha/(1-alpha))*log(ky_time) + log(a0) + ga*t # Log GDP pc at each t
lny_bgp <- (alpha/(1-alpha))*log(ky_ss) + log(a0) + ga*t # BGP of GDP pc at each t
gK_time <- si/ky_time - delta # growth rate of K at each t
gy_time <- (1-alpha)*(gK_time - ga - gl) + ga # growth rate of GDP pc at each t
solved <- list("time" = t, "KAL" = kal_time, "KY" = ky_time, "lny" = lny_time,
"lny_bgp" = lny_bgp, "gK" = gK_time, "gy" = gy_time, "KY_ss" = ky_ss,
"KAL_ss" = kal_ss, "KY_init" = ky_init, "KAL_init" = kal_init,
"gK_init" = gK_init, "gy_init" = gy_init)
return(solved)
}
init <- f.solow(k0=1.2)
krange <- seq(from = 1,to = 4, by = .1)
s = f.solow(k0 = krange)
View(s)
s$KAL
s$lny
s$lny_bgp
shiny::runApp('Dropbox/Project/StudyGuide/code/ProdBasic')
runApp('Dropbox/Project/StudyGuide/code/ProdBasic')
runApp('Dropbox/Project/StudyGuide/code/ProdBasic')
runApp('Dropbox/Project/StudyGuide/code/ProdBasic')
runApp('Dropbox/Project/StudyGuide/code/ProdBasic')
runApp('Dropbox/Project/StudyGuide/code/ProdBasic')
runApp('Dropbox/Project/StudyGuide/code/ProdBasic')
runApp('Dropbox/Project/StudyGuide/code/ProdBasic')
runApp('Dropbox/Project/StudyGuide/code/ProdBasic')
runApp('Dropbox/Project/StudyGuide/code/SolowBasic')
source("~/Dropbox/GrowthBlog/dvollrath.github.io/assets/2022-12-31-OECD-Europe.r")
figWN
figLW
figWN
figWN <- plot_ly(p, x = ~year, y = ~gWN, linetype = ~isocode, type = 'scatter')
figWN
source("~/Dropbox/GrowthBlog/dvollrath.github.io/assets/2022-12-31-OECD-Europe.r")
figWN
figLW
View(p)
source("~/Dropbox/GrowthBlog/dvollrath.github.io/assets/2022-12-31-OECD-Europe.r")
# Do growth accounting and prepare figures of results
#########################################################################
# Housekeeping
#########################################################################
# Necessary packages, you may have to install
library(pwt10)
library(plotly)
library(htmlwidgets)
#########################################################################
# Pick an elasticity of GDP w.r.t. capital
#########################################################################
alpha <- 0.3 # look, there is no perfectly right answer here
lags <- 10 # how many years to look backwards at growth rates
#########################################################################
# Pull PWT and OECD into dataframe
#########################################################################
# there is an OECD package to read data, but it is SLOOOOOWWWWWW.
o <- read.csv("~/dropbox/growthblog/dvollrath.github.io/assets/data/OECD_pop.csv", header=TRUE)
o <- o[which(o$LOCATION %in% c("USA","FRA","GBR","ESP","NLD","ITA","DEU")),] # select countries
o <- o[which(o$SEX %in% c("TT")),] # both sexes
o <- o[which(o$AGE %in% c("D1TTR5T2")),] # number of 20-64 year olds
o$WN <- 1/(1 + o$Value/100) # calculate 20-64 y.o (W) as percent of population (N)
o <- rename(o,c("isocode"="LOCATION")) # for merging
o <- rename(o,c("year"="Time")) # for merging
data("pwt10.0") # extracts PWT data into an object called pwt10.0
p <- pwt10.0 # copy PWT data for manipulation
p <- merge(p,o,by=c("isocode","year")) # merge with OECD age data
p$LN <- p$emp/p$pop # create employee (L) to pop (N) ratio
p$LW <- p$LN/p$WN # create employee (L) to working-age population (W) ratio
View(p)
source("~/Dropbox/GrowthBlog/dvollrath.github.io/assets/2022-12-31-OECD-Europe.r")
p <- p[with(p, order(isocode, year)), ]
source("~/Dropbox/GrowthBlog/dvollrath.github.io/assets/2022-12-31-OECD-Europe.r")
figLW
# Do growth accounting and prepare figures of results
#########################################################################
# Housekeeping
#########################################################################
# Necessary packages, you may have to install
library(pwt10)
library(plotly)
library(htmlwidgets)
#########################################################################
# Pick an elasticity of GDP w.r.t. capital
#########################################################################
alpha <- 0.3 # look, there is no perfectly right answer here
lags <- 10 # how many years to look backwards at growth rates
#########################################################################
# Pull PWT into dataframe
#########################################################################
data("pwt10.0") # extracts PWT data into an object called pwt10.0
p <- pwt10.0 # copy PWT data for manipulation
#########################################################################
# Set up function to calculation growth rates at arbitrary lags for countries
# - Takes as given that you pass a PWT object with an isocode
#########################################################################
f.grate <- function(data,name,lags){
data$v <- data[[name]] # data series to do growth rate on
data$vlag <- lag(data$v,lags) # lag the data series
data$g <- (data$v/data$vlag)^(1/lags) - 1 # calculate the growth rate
data$isolag <- lag(data$isocode,lags) # lag the isocode
data$g[data$isocode != data$isolag] <- NA # replace with NA if eval goes x country
return(round(data$g,digits=4))
}
p$y <- p$rgdpna/p$pop # create log GDP per capita
p$KY <- p$rnna/p$rgdpna # create K/Y ratio
p$LN <- p$emp/p$pop # create employee (L) to pop (N) ratio
p$gy <- f.grate(p,"y",lags) # GDP per capita
p$gKY <- f.grate(p,"KY",lags) # capital/output ratio
p$gLN <- f.grate(p,"LN",lags) # emp/pop ratio
p$gavh <- f.grate(p,"avh",lags) # average hours worked
p$ged <- f.grate(p,"hc",lags) # this is actually just education
p$gA <- round(p$gy - (alpha/(1-alpha))*p$gKY - p$gLN - p$gavh - p$ged,digits=4) # productivity growth
p$gcap <- round((alpha/(1-alpha))*p$gKY,digits=4) # net capital term
p$ghc <- round(p$gLN + p$gavh + p$ged,digits=4) # sum of all HC terms
# Do growth accounting and prepare figures of results
#########################################################################
# Housekeeping
#########################################################################
# Necessary packages, you may have to install
library(pwt10)
library(plotly)
library(htmlwidgets)
#########################################################################
# Pick an elasticity of GDP w.r.t. capital
#########################################################################
alpha <- 0.3 # look, there is no perfectly right answer here
lags <- 10 # how many years to look backwards at growth rates
#########################################################################
# Pull PWT into dataframe
#########################################################################
data("pwt10.0") # extracts PWT data into an object called pwt10.0
p <- pwt10.0 # copy PWT data for manipulation
#########################################################################
# Set up function to calculation growth rates at arbitrary lags for countries
# - Takes as given that you pass a PWT object with an isocode
#########################################################################
f.grate <- function(data,name,lags){
data$v <- data[[name]] # data series to do growth rate on
data$vlag <- lag(data$v,lags) # lag the data series
data$g <- (data$v/data$vlag)^(1/lags) - 1 # calculate the growth rate
data$isolag <- lag(data$isocode,lags) # lag the isocode
data$g[data$isocode != data$isolag] <- NA # replace with NA if eval goes x country
return(round(data$g,digits=4))
}
p$y <- p$rgdpna/p$pop # create log GDP per capita
p$KY <- p$rnna/p$rgdpna # create K/Y ratio
p$LN <- p$emp/p$pop # create employee (L) to pop (N) ratio
p$gy <- f.grate(p,"y",lags) # GDP per capita
p$gKY <- f.grate(p,"KY",lags) # capital/output ratio
p$gLN <- f.grate(p,"LN",lags) # emp/pop ratio
p$gavh <- f.grate(p,"avh",lags) # average hours worked
p$ged <- f.grate(p,"hc",lags) # this is actually just education
p$gA <- round(p$gy - (alpha/(1-alpha))*p$gKY - p$gLN - p$gavh - p$ged,digits=4) # productivity growth
p$gcap <- round((alpha/(1-alpha))*p$gKY,digits=4) # net capital term
p$ghc <- round(p$gLN + p$gavh + p$ged,digits=4) # sum of all HC terms
#########################################################################
# Subset data for Europe and accounting terms
#########################################################################
europe <- p[which(p$isocode %in% c("USA","FRA","GBR","ESP","NLD","ITA","DEU")),]
france <- p[which(p$isocode %in% c("USA","FRA")),]
fig_france <- plot_ly(france, x = ~year, y = ~gy, linetype = ~isocode, type = 'scatter', mode = 'lines')
fig_france <- layout(fig_france, title = list(text = '10-year growth rate of GDP per capita', x=0),
xaxis = list(title = 'Year'),
yaxis = list (title = '10-year growth rate', range=c(-.01,.08)),
hovermode="x unified")
fig_france
p$v <- p$y
View(p)
View(p)
# Do growth accounting and prepare figures of results
#########################################################################
# Housekeeping
#########################################################################
# Necessary packages, you may have to install
library(pwt10)
library(plotly)
library(htmlwidgets)
#########################################################################
# Pick an elasticity of GDP w.r.t. capital
#########################################################################
alpha <- 0.3 # look, there is no perfectly right answer here
lags <- 10 # how many years to look backwards at growth rates
#########################################################################
# Pull PWT and OECD into dataframe
#########################################################################
# there is an OECD package to read data, but it is SLOOOOOWWWWWW.
o <- read.csv("~/dropbox/growthblog/dvollrath.github.io/assets/data/OECD_pop.csv", header=TRUE)
o <- o[which(o$LOCATION %in% c("USA","FRA","GBR","ESP","NLD","ITA","DEU")),] # select countries
o <- o[which(o$SEX %in% c("TT")),] # both sexes
o <- o[which(o$AGE %in% c("D1TTR5T2")),] # number of 20-64 year olds
o$WN <- 1/(1 + o$Value/100) # calculate 20-64 y.o (W) as percent of population (N)
o <- rename(o,c("isocode"="LOCATION")) # for merging
o <- rename(o,c("year"="Time")) # for merging
data("pwt10.0") # extracts PWT data into an object called pwt10.0
p <- pwt10.0 # copy PWT data for manipulation
p <- merge(o,p,by=c("isocode","year")) # merge with OECD age data
p$LN <- p$emp/p$pop # create employee (L) to pop (N) ratio
p$LW <- p$LN/p$WN # create employee (L) to working-age population (W) ratio
p <- p[with(p, order(isocode, year)), ]
View(p)
f.grate <- function(data,name,lags){
data$v <- data[[name]] # data series to do growth rate on
data$vlag <- lag(data$v,lags) # lag the data series
data$g <- (data$v/data$vlag)^(1/lags) - 1 # calculate the growth rate
data$isolag <- lag(data$isocode,lags) # lag the isocode
data$g[data$isocode != data$isolag] <- NA # replace with NA if eval goes x country
return(round(data$g,digits=4))
}
p$y <- p$rgdpna/p$pop # create log GDP per capita
p$KY <- p$rnna/p$rgdpna # create K/Y ratio
p$LN <- p$emp/p$pop # create employee (L) to pop (N) ratio
p$gy <- f.grate(p,"y",lags) # GDP per capita
p$gKY <- f.grate(p,"KY",lags) # capital/output ratio
p$gLN <- f.grate(p,"LN",lags) # emp/pop ratio
p$gLW <- f.grate(p,"LW",lags) # employee/working age ratio
p$gWN <- f.grate(p,"WN",lags) # working age/pop ratio
p$gavh <- f.grate(p,"avh",lags) # average hours worked
p$ged <- f.grate(p,"hc",lags) # this is actually just education
p$gA <- round(p$gy - (alpha/(1-alpha))*p$gKY - p$gLN - p$gavh - p$ged,digits=4) # productivity growth
p$gcap <- round((alpha/(1-alpha))*p$gKY,digits=4) # net capital term
p$ghc <- round(p$gLW + p$gWN + p$gavh + p$ged,digits=4) # sum of all HC terms
p$v <- p$y
p$vlag <-lag(p$v,10)
View(p)
p$vlag <- lag(p$v,10)
source("~/Dropbox/GrowthBlog/dvollrath.github.io/assets/2022-12-29-PWT-Europe.r")
fig_hc
source("~/Dropbox/GrowthBlog/dvollrath.github.io/assets/2022-12-29-PWT-Europe.r")
source("~/Dropbox/GrowthBlog/dvollrath.github.io/assets/2022-12-29-PWT-Europe.r")
fig_hc
fig_europe
source("~/Dropbox/GrowthBlog/dvollrath.github.io/assets/2022-12-29-PWT-Europe.r")
fig_europe
source("~/Dropbox/GrowthBlog/dvollrath.github.io/assets/2022-12-29-PWT-Europe.r")
fig_europe
source("~/Dropbox/GrowthBlog/dvollrath.github.io/assets/2022-12-29-PWT-Europe.r")
fig_europe
source("~/Dropbox/GrowthBlog/dvollrath.github.io/assets/2022-12-29-PWT-Europe.r")
fig_europe
fig_hc
fig_cap
fig_prod
fig_europe
source("~/Dropbox/GrowthBlog/dvollrath.github.io/assets/2022-12-29-PWT-Europe.r")
fig_europe
fig_cap
fig_hc
fig_prod
fig_europe
source("~/Dropbox/Project/StudyGuide/code/Guide_AAA_Setup.r")
install.packages("pwt10")
source("~/Dropbox/Project/StudyGuide/code/Guide_AAA_Setup.r")
install.packages("OECD")
source("~/Dropbox/Project/StudyGuide/code/Guide_AAA_Setup.r")
install.packages("reshape2")
source("~/Dropbox/Project/StudyGuide/code/Guide_AAA_Setup.r")
install.packages("WDI")
source("~/Dropbox/Project/StudyGuide/code/Guide_AAA_Setup.r")
install.packages("DT")
source("~/Dropbox/Project/StudyGuide/code/Guide_AAA_Setup.r")
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_10SD_Facts.r")
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_10SD_Facts.r")
# 10-sector database
#########################################################################
sd <- read.csv("10SD_jan15.csv", header=TRUE)
sd$Extract <- (sd$AGR + sd$MIN)/sd$SUM
sd$Manuf <- (sd$MAN + sd$PU + sd$CON)/sd$SUM
sd$Service <- (sd$WRT + sd$TRA + sd$FIRE + sd$GOV + sd$OTH)/sd$SUM
q <- sd[which(sd$Variable %in% c('VA_Q05')),]
q <- q[,c("Country","Year","SUM")]
colnames(q)[3] <- 'Q'
e <- sd[which(sd$Variable %in% c('EMP')),]
e <- e[,c("Country","Year","SUM")]
colnames(e)[3] <- 'L'
va <- sd[which(sd$Variable %in% c('VA')),]
emp <- sd[which(sd$Variable %in% c('EMP')),]
View(e)
View(q)
q <- merge(q,e, by = c('Country','Year'))
View(q)
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_10SD_Facts.r")
fig
fig <- plot_ly(va, x = ~lngdppc)
fig <- fig %>% add_trace(y = ~Extract, name = 'Extraction', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~Manuf, name = 'Manufacturing', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~Service, name = 'Services', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'Structural change and GDP per capita', x=0),
xaxis = list(title = 'Log Real VA per capita',tick0=1000, dtick=100),
yaxis = list (title = 'Share of Nominal VA', range=c(0,11)),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/10SD-va-lngdppc.html",selfcontained = F, libdir = "lib")
fig
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_10SD_Facts.r")
fig
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_10SD_Facts.r")
fig
data("pwt10.01")
p <- pwt10.01 # copy dataframe for manipulation
p$rgdpopc <- round(p$rgdpo/p$pop,digits=0) # GDP per capita at PPP
p$lnrgdpopc <- round(log(p$rgdpopc),digits=2) # log GDP per capita for figure
# 10-sector database
#########################################################################
data("pwt10.01")
p <- pwt10.01 # copy dataframe for manipulation
p$rgdpopc <- round(p$rgdpo/p$pop,digits=0) # GDP per capita at PPP
p$lnrgdpopc <- round(log(p$rgdpopc),digits=2) # log GDP per capita for figure
p <- p[,c("isocode","year","lnrgdpopc")]
colnames(p)[1] <- 'Country'
colnames(p)[2] <- 'Year'
sd <- read.csv("10SD_jan15.csv", header=TRUE)
sd$Extract <- (sd$AGR + sd$MIN)/sd$SUM
sd$Manuf <- (sd$MAN + sd$PU + sd$CON)/sd$SUM
sd$Service <- (sd$WRT + sd$TRA + sd$FIRE + sd$GOV + sd$OTH)/sd$SUM
va <- sd[which(sd$Variable %in% c('VA')),]
emp <- sd[which(sd$Variable %in% c('EMP')),]
va <- merge(va,p, by = c('Country','Year'))
emp <- merge(emp,p, by = c('Country','Year'))
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_10SD_Facts.r")
fig
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Extract, name = 'Extraction', type = 'scatter', mode = 'markers')
fig <- layout(fig, title = list(text = 'Structural change and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list (title = 'Share of Nominal VA', range=c(0,1)),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/10SD-va-extract.html",selfcontained = F, libdir = "lib")
fig
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_10SD_Facts.r")
fig
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, type = 'scatter', mode = 'markers',
hovertemplate = paste('Country: $%{Country}',
'<br>Log y: %{lnrgdpopc}<br>',
'Service share: %{Service}'),
fig <- layout(fig, title = list(text = 'Services and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list (title = 'Services share of VA', range=c(0,1)),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/10SD-va-services.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, type = 'scatter', mode = 'markers',
hovertemplate = paste('Country: $%{Country}',
'<br>Log y: %{lnrgdpopc}<br>',
'Service share: %{Service}'),
fig <- layout(fig, title = list(text = 'Services and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list (title = 'Services share of VA', range=c(0,1)))
saveWidget(partial_bundle(fig), "../plotly/10SD-va-services.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, type = 'scatter', mode = 'markers',
hovertemplate = paste('Country: $%{Country}',
'<br>Log y: %{lnrgdpopc}<br>',
'Service share: %{Service}'),
fig <- layout(fig, title = list(text = 'Services and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list(title = 'Services share of VA', range=c(0,1))
)
saveWidget(partial_bundle(fig), "../plotly/10SD-va-services.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, type = 'scatter', mode = 'markers',
hovertemplate = paste('Country: $%{Country}',
'<br>Log y: %{lnrgdpopc}<br>',
'Service share: %{Service}'),
fig <- layout(fig, title = list(text = 'Services and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list(title = 'Services share of VA', range=c(0,1))
)
fig
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, type = 'scatter', mode = 'markers',
hovertemplate = paste('Country: $%{Country}',
'<br>Log y: %{lnrgdpopc}<br>',
'Service share: %{Service}')
)
fig <- layout(fig, title = list(text = 'Services and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list(title = 'Services share of VA', range=c(0,1))
)
saveWidget(partial_bundle(fig), "../plotly/10SD-va-services.html",selfcontained = F, libdir = "lib")
fig
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, text = 'Country', type = 'scatter', mode = 'markers',
hovertemplate = paste('Country: %{Country}',
'<br>Log y: %{lnrgdpopc}<br>',
'Service share: %{Service}')
)
fig <- layout(fig, title = list(text = 'Services and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list(title = 'Services share of VA', range=c(0,1))
)
saveWidget(partial_bundle(fig), "../plotly/10SD-va-services.html",selfcontained = F, libdir = "lib")
fig
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_10SD_Facts.r")
fig
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, type = 'scatter', mode = 'markers', text = ~Country)
fig <- layout(fig, title = list(text = 'Services and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list(title = 'Services share of VA', range=c(0,1)),
hoverinfo="text")
saveWidget(partial_bundle(fig), "../plotly/10SD-va-services.html",selfcontained = F, libdir = "lib")
fig
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, type = 'scatter', mode = 'markers', text = ~Country,  hoverinfo="text")
fig <- layout(fig, title = list(text = 'Services and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list(title = 'Services share of VA', range=c(0,1)))
saveWidget(partial_bundle(fig), "../plotly/10SD-va-services.html",selfcontained = F, libdir = "lib")
fig
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, type = 'scatter', mode = 'markers',
hovertext = ~paste0(Country, "<br>", Service)
hoverinfo="text")
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, type = 'scatter', mode = 'markers',
hovertext = paste(Country, "<br>", Service)
hoverinfo="text")
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, type = 'scatter', mode = 'markers',
hovertext = ~paste(Country, "<br>", Service),
hoverinfo="text")
fig <- layout(fig, title = list(text = 'Services and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list(title = 'Services share of VA', range=c(0,1)))
saveWidget(partial_bundle(fig), "../plotly/10SD-va-services.html",selfcontained = F, libdir = "lib")
fig
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, type = 'scatter', mode = 'markers',
hovertext = ~paste(Country, "<br>", round(Service,2)),
hoverinfo="text")
fig <- layout(fig, title = list(text = 'Services and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list(title = 'Services share of VA', range=c(0,1)))
saveWidget(partial_bundle(fig), "../plotly/10SD-va-services.html",selfcontained = F, libdir = "lib")
fig
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, type = 'scatter', mode = 'markers',
hovertext = ~paste(Country, "<br>", Year, "<br>", round(Service,2)),
hoverinfo="text")
fig <- layout(fig, title = list(text = 'Services and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list(title = 'Services share of VA', range=c(0,1)))
saveWidget(partial_bundle(fig), "../plotly/10SD-va-services.html",selfcontained = F, libdir = "lib")
fig
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_10SD_Facts.r")
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Extract, name = 'Extraction', type = 'scatter', mode = 'markers',
hovertext = ~paste(Country, "<br>", Year, "<br>", round(Manuf,2)),
hoverinfo="text")
fig <- layout(fig, title = list(text = 'Extraction and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list (title = 'Extraction share of VA', range=c(0,1)),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/10SD-va-extract.html",selfcontained = F, libdir = "lib")
fig
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Extract, name = 'Extraction', type = 'scatter', mode = 'markers',
hovertext = ~paste(Country, "<br>", Year, "<br>", round(Extract,2)),
hoverinfo="text")
fig <- layout(fig, title = list(text = 'Extraction and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list (title = 'Extraction share of VA', range=c(0,1)),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/10SD-va-extract.html",selfcontained = F, libdir = "lib")
fig
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Manuf, type = 'scatter', mode = 'markers',
hovertext = ~paste(Country, "<br>", Year, "<br>", round(Manuf,2)),
hoverinfo="text")
fig <- layout(fig, title = list(text = 'Manufacturing and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list (title = 'Manufacturing share of VA', range=c(0,1)),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/10SD-va-manuf.html",selfcontained = F, libdir = "lib")
fig
fig <- plot_ly(va, x = ~lnrgdpopc)
fig <- fig %>% add_trace(y = ~Service, type = 'scatter', mode = 'markers',
hovertext = ~paste(Country, "<br>", Year, "<br>", round(Service,2)),
hoverinfo="text")
fig <- layout(fig, title = list(text = 'Services and GDP per capita', x=0),
xaxis = list(title = 'Log GDP per capita'),
yaxis = list(title = 'Services share of VA', range=c(0,1)))
saveWidget(partial_bundle(fig), "../plotly/10SD-va-services.html",selfcontained = F, libdir = "lib")
fig
sd <- read.csv("10SD_jan15.csv", header=TRUE)
q <- sd[which(sd$Variable %in% c('VA_Q05')),]
