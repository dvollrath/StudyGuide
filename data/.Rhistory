source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_AAA_Setup.r")
# Uses OECD to create a large number of figures used in Study Guide
##################################################################################
# R&D worker data
##################################################################################
filter_list <- list(c("USA","JPN","KOR","CHN","DEU","GBR")) # limit countries to download
fte <- get_dataset("PERS_FUNC", filter = filter_list)
# Uses OECD to create a large number of figures used in Study Guide
##################################################################################
# R&D worker data
##################################################################################
#filter_list <- list(c("USA","JPN","KOR","CHN","DEU","GBR")) # limit countries to download
#fte <- get_dataset("PERS_FUNC", filter = filter_list)
#fte <- work
#fte <- fte[which(fte$SECTPERF %in% c("_T")),] # all sectors
#fte <- fte[which(fte$FUNCTION %in% c("RSE")),] # researchers
#fte <- fte[which(fte$GENDER %in% c("_T")),] # both genders
#fte <- fte[which(fte$MEASURE %in% c("FTE")),] # FTE measured
#write.csv(fte,file="OECD_PERS_FUNC.csv",row.names=FALSE, na="") # save in case
mad <- read.csv("OECD_PERS_FUNC.csv", header=TRUE)
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_AAA_Setup.r")
# Uses OECD to create a large number of figures used in Study Guide
##################################################################################
# R&D worker data
##################################################################################
#filter_list <- list(c("USA","JPN","KOR","CHN","DEU","GBR")) # limit countries to download
#fte <- get_dataset("PERS_FUNC", filter = filter_list)
#fte <- work
#fte <- fte[which(fte$SECTPERF %in% c("_T")),] # all sectors
#fte <- fte[which(fte$FUNCTION %in% c("RSE")),] # researchers
#fte <- fte[which(fte$GENDER %in% c("_T")),] # both genders
#fte <- fte[which(fte$MEASURE %in% c("FTE")),] # FTE measured
#write.csv(fte,file="OECD_PERS_FUNC.csv",row.names=FALSE, na="") # save in case
mad <- read.csv("OECD_PERS_FUNC.csv", header=TRUE)
fte$lnrdworker <- log(as.numeric(fte$ObsValue)) # log value
fte <- read.csv("OECD_PERS_FUNC.csv", header=TRUE)
fte$lnrdworker <- log(as.numeric(fte$ObsValue)) # log value
##################################################################################
# Figures for R&D workers and Log R&D workers
##################################################################################
fig <- plot_ly(fte, x = ~Time, y = ~ObsValue, linetype = ~COUNTRY, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'R&D Workers over time', x=0),
xaxis = list(title = 'Year'),
yaxis = list (title = 'FTE R&D Workers'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/oecd-rd-fte.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(fte, x = ~Time, y = ~lnrdworker, linetype = ~COUNTRY, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'R&D Workers over time', x=0),
xaxis = list(title = 'Year'),
yaxis = list (title = 'Log FTE R&D Workers'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/oecd-rd-lnfte.html",selfcontained = F, libdir = "lib")
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_OECD_RD.r")
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_OECD_RD.r")
View(gerd)
filter_list <- list(c("USA","JPN","KOR","CHN","DEU","GBR")) # limit countries to download
gerd <- get_dataset("GERD_TOE", filter = filter_list)
gerd <- read.csv("OECD_GERD_TOE.csv", header=TRUE)
View(gerd)
gerd <- read.csv("OECD_GERD_TOE.csv", header=TRUE)
gerd <- gerd[which(gerd$REF_AREA %in% c("USA","CHN","KOR","JPN","DEU","GBR")),]
gerd$lnrd <- round(log(as.numeric(gerd$ObsValue)),digits=2)
View(gerd)
gerd <- read.csv("OECD_GERD_TOE.csv", header=TRUE)
gerd <- gerd[which(gerd$REF_AREA %in% c("USA","CHN","KOR","JPN","DEU","GBR")),]
gerd$lnrd <- round(log(as.numeric(gerd$OBS_VALUE)),digits=2)
fig <- plot_ly(gerd, x = ~Time, y = ~lnrd, linetype = ~COUNTRY, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'R&D expenditure over time', x=0),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Log real R&D expenditures', type='log'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/oecd-rd-logrd.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(gerd, x = ~TIME_PERIOD, y = ~lnrd, linetype = ~COUNTRY, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'R&D expenditure over time', x=0),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Log real R&D expenditures', type='log'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/oecd-rd-logrd.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(gerd, x = ~TIME_PERIOD, y = ~lnrd, linetype = ~Reference.area, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'R&D expenditure over time', x=0),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Log real R&D expenditures', type='log'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/oecd-rd-logrd.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(gerd, x = ~TIME_PERIOD, y = ~lnrd, linetype = ~REF_AREA, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'R&D expenditure over time', x=0),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Log real R&D expenditures', type='log'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/oecd-rd-logrd.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(gerd, x = ~TIME_PERIOD, y = ~lnrd, linetype = ~REF_AREA, type = 'scatter', mode = 'markers')
fig <- layout(fig, title = list(text = 'R&D expenditure over time', x=0),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Log real R&D expenditures', type='log'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/oecd-rd-logrd.html",selfcontained = F, libdir = "lib")
gerd <- gerd[with(gerd,order(REF_AREA,TIME_PERIOD))]
gerd <- gerd[with(gerd,order(REF_AREA,TIME_PERIOD))]
gerd <- gerd[gerd$REF_AREA,gerd$TIME_PERIOD]
gerd <- read.csv("OECD_GERD_TOE.csv", header=TRUE)
gerd <- gerd[which(gerd$REF_AREA %in% c("USA","CHN","KOR","JPN","DEU","GBR")),]
gerd$lnrd <- round(log(as.numeric(gerd$OBS_VALUE)),digits=2)
View(gerd)
gerd <- gerd[order(gerd$REF_AREA,gerd$TIME_PERIOD),]
fig <- plot_ly(gerd, x = ~TIME_PERIOD, y = ~lnrd, linetype = ~REF_AREA, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'R&D expenditure over time', x=0),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Log real R&D expenditures', type='log'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/oecd-rd-logrd.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(gerd, x = ~TIME_PERIOD, y = ~OBS_VALUE, linetype = ~REF_AREA, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'R&D expenditure over time', x=0),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Real R&D expenditures'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/oecd-rd-levelrd.html",selfcontained = F, libdir = "lib")
gerd <- read.csv("OECD_GERD_TOE.csv", header=TRUE)
gerd <- gerd[which(gerd$REF_AREA %in% c("USA","CHN","KOR","JPN","DEU","GBR")),]
gerd <- gerd[which(gerd$PRICE_BASE %in% c("Q")),]
gerd$lnrd <- round(log(as.numeric(gerd$OBS_VALUE)),digits=2)
gerd <- gerd[order(gerd$REF_AREA,gerd$TIME_PERIOD),]
fig <- plot_ly(gerd, x = ~TIME_PERIOD, y = ~lnrd, linetype = ~REF_AREA, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'R&D expenditure over time', x=0),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Log real R&D expenditures', type='log'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/oecd-rd-logrd.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(gerd, x = ~TIME_PERIOD, y = ~OBS_VALUE, linetype = ~REF_AREA, type = 'scatter', mode = 'lines+markers')
fig <- layout(fig, title = list(text = 'R&D expenditure over time', x=0),
xaxis = list(title = 'Year'),
yaxis = list(title = 'Real R&D expenditures'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/oecd-rd-levelrd.html",selfcontained = F, libdir = "lib")
#api_create(fig, filename = "oecd-rd-levelrd")
# Create case study figures
#########################################################################
# Pull PWT into dataframe
data("pwt10.01")
# Basic calculations
p <- pwt10.01 # copy dataframe for manipulation
p$lngdppc <- round(log(p$rgdpna) - log(p$pop),digits=2) # create log GDP per capita
p$lntfp <- log(p$rtfpna)
p$ky <- round(p$rnna/p$rgdpna,digits=2) # create K/Y ratio
p$phil <- round(p$labsh*p$rgdpna/(p$labsh*p$rgdpna+.05*p$rnna),digits=2) # create kludge cost share of labor
# Calculate growth rate of population
p <-
p %>%
group_by(isocode) %>%
mutate(lag1.pop = dplyr::lag(pop, n = 1, default = NA))
p$g1.pop <- (log(p$pop) - log(p$lag1.pop))/1
p$si<- round(p$csh_i,digits=2)
# subset PWT into stable and catchup groups
usa <- p[which(p$isocode %in% c("USA")),]
deu <- p[which(p$isocode %in% c("DEU")),]
kor <- p[which(p$isocode %in% c("KOR")),]
chn <- p[which(p$isocode %in% c("CHN")),]
comp <- p[which(p$isocode %in% c("USA","CHN","KOR")),]
#########################################################################
# Simple TS regressions for fitted BGP for USA
#########################################################################
m1 <- lm(usa$lngdppc~usa$year, data=usa)
m2 <- lm(usa$lngdppc~usa$year, data=usa, subset=(year<2001))
usa$fitted <- predict(m2,usa)
fig <- plot_ly(usa, x = ~year, y = ~lngdppc, linetype = ~isocode, type = 'scatter', mode = 'lines+markers')
fig <- fig %>% add_trace(y = fitted(m1), name = 'BGP All',mode = 'lines')
fig <- fig %>% add_trace(y = ~fitted, name = 'BGP 20th',mode = 'lines')
fig <- layout(fig, title = list(text = 'Log GDP per capita for United States', x=0),
xaxis = list(title = 'Year', tick0=1950, dtick=10),
yaxis = list (title = 'Log GDP per capita', range=c(9,12)),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/pwt-apply-usa.html",selfcontained = F, libdir = "lib")
m2 <- lm(deu$lngdppc~deu$year, data=deu, subset=(year>1990))
deu$fitted <- predict(m2,deu)
fig <- plot_ly(deu, x = ~year, y = ~lngdppc, linetype = ~isocode, type = 'scatter', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~fitted, name = 'BGP',mode = 'lines')
fig <- layout(fig, title = list(text = 'Log GDP per capita for Germany', x=0),
xaxis = list(title = 'Year', tick0=1950, dtick=10),
yaxis = list (title = 'Log GDP per capita', range=c(7,11)),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/pwt-apply-deu.html",selfcontained = F, libdir = "lib")
#api_create(fig, filename = "pwt-apply-deu")
m1 <- lm(kor$lngdppc~kor$year, data=kor, subset=(year<1963))
kor$fitted1 <- predict(m1,kor)
m2 <- lm(kor$lngdppc~kor$year, data=kor, subset=(year>2009))
kor$fitted2 <- predict(m2,kor)
fig <- plot_ly(kor, x = ~year, y = ~lngdppc, linetype = ~isocode, type = 'scatter', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~fitted1, name = 'BGP before',mode = 'lines')
fig <- fig %>% add_trace(y = ~fitted2, name = 'BGP after',mode = 'lines')
fig <- layout(fig, title = list(text = 'Log GDP per capita for South Korea', x=0),
xaxis = list(title = 'Year', tick0=1950, dtick=10),
yaxis = list (title = 'Log GDP per capita', range=c(6.5,11)),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/pwt-apply-kor.html",selfcontained = F, libdir = "lib")
m1 <- lm(chn$lngdppc~chn$year, data=chn, subset=(year<1970))
chn$fitted1 <- predict(m1,chn)
chn$fitted2 <- predict(m2,chn) # use Korea's current BGP as comparison
fig <- plot_ly(chn, x = ~year, y = ~lngdppc, linetype = ~isocode, type = 'scatter', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~fitted1, name = 'BGP before',mode = 'lines')
fig <- fig %>% add_trace(y = ~fitted2, name = 'S. Korea BGP',mode = 'lines')
fig <- layout(fig, title = list(text = 'Log GDP per capita for China', x=0),
xaxis = list(title = 'Year', tick0=1950, dtick=10),
yaxis = list (title = 'Log GDP per capita', range=c(6.5,11)),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/pwt-apply-chn.html",selfcontained = F, libdir = "lib")
f <- p[which(p$isocode %in% c("CHN")),] # re-grab initial data
f <- f[which(f$year>1960),]
m2 <- lm(f$lntfp~f$year, data=f, subset=(year>1960 & year<2000))
m3 <- lm(f$lntfp~f$year, data=f, subset=(year>2013))
f$fitted2 <- predict(m2,f)
f$fitted3 <- predict(m3,f)
fig <- plot_ly(f, x = ~year, y = ~lntfp, linetype = ~isocode, type = 'scatter', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~fitted2, name = 'Early BGP?',mode = 'lines')
fig <- fig %>% add_trace(y = ~fitted3, name = 'New BGP?',mode = 'lines')
fig <- layout(fig, title = list(text = 'Level of productivity', x=0),
xaxis = list(title = 'Year', tick0=1950, dtick=10),
yaxis = list (title = 'Log productivity'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/pwt-apply-gtfp-chn.html",selfcontained = F, libdir = "lib")
# Create case study figures
#########################################################################
# Pull PWT into dataframe
data("pwt10.01")
# Basic calculations
p <- pwt10.01 # copy dataframe for manipulation
p$lngdppc <- round(log(p$rgdpna) - log(p$pop),digits=2) # create log GDP per capita
p$lntfp <- log(p$rtfpna)
p$ky <- round(p$rnna/p$rgdpna,digits=2) # create K/Y ratio
p$phil <- round(p$labsh*p$rgdpna/(p$labsh*p$rgdpna+.05*p$rnna),digits=2) # create kludge cost share of labor
# Calculate growth rate of population
p <-
p %>%
group_by(isocode) %>%
mutate(lag1.pop = dplyr::lag(pop, n = 1, default = NA))
p$g1.pop <- (log(p$pop) - log(p$lag1.pop))/1
p$si<- round(p$csh_i,digits=2)
# subset PWT into stable and catchup groups
usa <- p[which(p$isocode %in% c("USA")),]
deu <- p[which(p$isocode %in% c("DEU")),]
kor <- p[which(p$isocode %in% c("KOR")),]
chn <- p[which(p$isocode %in% c("CHN")),]
comp <- p[which(p$isocode %in% c("USA","CHN","KOR")),]
f <- p[which(p$isocode %in% c("CHN")),] # re-grab initial data
f <- f[which(f$year>1960),]
m2 <- lm(f$lntfp~f$year, data=f, subset=(year>1960 & year<2000))
m3 <- lm(f$lntfp~f$year, data=f, subset=(year>2013))
f$fitted2 <- predict(m2,f)
f$fitted3 <- predict(m3,f)
m2
m3
m2 <- lm(f$lntfp~f$year, data=f, subset=(year>1960 & year<2000))
m3 <- lm(f$lntfp~f$year, data=f, subset=(year>2013 & year<2020))
f$fitted2 <- predict(m2,f)
f$fitted3 <- predict(m3,f)
fig <- plot_ly(f, x = ~year, y = ~lntfp, linetype = ~isocode, type = 'scatter', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~fitted2, name = 'Early BGP?',mode = 'lines')
fig <- fig %>% add_trace(y = ~fitted3, name = 'New BGP?',mode = 'lines')
fig <- layout(fig, title = list(text = 'Level of productivity', x=0),
xaxis = list(title = 'Year', tick0=1950, dtick=10),
yaxis = list (title = 'Log productivity'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/pwt-apply-gtfp-chn.html",selfcontained = F, libdir = "lib")
m3
m3 <- lm(f$lntfp~f$year, data=f, subset=(year>2013 & year<2019))
f$fitted2 <- predict(m2,f)
f$fitted3 <- predict(m3,f)
m3
m3 <- lm(f$lntfp~f$year, data=f, subset=(year>2013 & year<2018))
m3
m3 <- lm(f$lntfp~f$year, data=f, subset=(year>2010 & year<2018))
m3
f <- p[which(p$isocode %in% c("CHN")),] # re-grab initial data
f <- f[which(f$year>1960),]
m2 <- lm(f$lntfp~f$year, data=f, subset=(year>1960 & year<2000))
m3 <- lm(f$lntfp~f$year, data=f, subset=(year>2010 & year<2018))
f$fitted2 <- predict(m2,f)
#f$fitted3 <- predict(m3,f)
f$fitted3 <- f$fitted2 + .4
fig <- plot_ly(f, x = ~year, y = ~lntfp, linetype = ~isocode, type = 'scatter', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~fitted2, name = 'Early BGP?',mode = 'lines')
fig <- fig %>% add_trace(y = ~fitted3, name = 'New BGP?',mode = 'lines')
fig <- layout(fig, title = list(text = 'Level of productivity', x=0),
xaxis = list(title = 'Year', tick0=1950, dtick=10),
yaxis = list (title = 'Log productivity'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/pwt-apply-gtfp-chn.html",selfcontained = F, libdir = "lib")
f <- p[which(p$isocode %in% c("CHN")),] # re-grab initial data
f <- f[which(f$year>1960),]
m2 <- lm(f$lntfp~f$year, data=f, subset=(year>1960 & year<2000))
m3 <- lm(f$lntfp~f$year, data=f, subset=(year>2006 & year<2018))
f$fitted2 <- predict(m2,f)
f$fitted3 <- predict(m3,f)
fig <- plot_ly(f, x = ~year, y = ~lntfp, linetype = ~isocode, type = 'scatter', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~fitted2, name = 'Early BGP?',mode = 'lines')
fig <- fig %>% add_trace(y = ~fitted3, name = 'New BGP?',mode = 'lines')
fig <- layout(fig, title = list(text = 'Level of productivity', x=0),
xaxis = list(title = 'Year', tick0=1950, dtick=10),
yaxis = list (title = 'Log productivity'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/pwt-apply-gtfp-chn.html",selfcontained = F, libdir = "lib")
f <- p[which(p$isocode %in% c("CHN")),] # re-grab initial data
f <- f[which(f$year>1965),]
m2 <- lm(f$lntfp~f$year, data=f, subset=(year>1965 & year<2000))
m3 <- lm(f$lntfp~f$year, data=f, subset=(year>2006 & year<2020))
f$fitted2 <- predict(m2,f)
f$fitted3 <- predict(m3,f)
fig <- plot_ly(f, x = ~year, y = ~lntfp, linetype = ~isocode, type = 'scatter', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~fitted2, name = 'Early BGP?',mode = 'lines')
fig <- fig %>% add_trace(y = ~fitted3, name = 'New BGP?',mode = 'lines')
fig <- layout(fig, title = list(text = 'Level of productivity', x=0),
xaxis = list(title = 'Year', tick0=1950, dtick=10),
yaxis = list (title = 'Log productivity'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/pwt-apply-gtfp-chn.html",selfcontained = F, libdir = "lib")
f <- p[which(p$isocode %in% c("CHN")),] # re-grab initial data
f <- f[which(f$year>1962),]
m2 <- lm(f$lntfp~f$year, data=f, subset=(year>1962 & year<2000))
m3 <- lm(f$lntfp~f$year, data=f, subset=(year>2006 & year<2019))
f$fitted2 <- predict(m2,f)
f$fitted3 <- predict(m3,f)
fig <- plot_ly(f, x = ~year, y = ~lntfp, linetype = ~isocode, type = 'scatter', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~fitted2, name = 'Early BGP?',mode = 'lines')
fig <- fig %>% add_trace(y = ~fitted3, name = 'New BGP?',mode = 'lines')
fig <- layout(fig, title = list(text = 'Level of productivity', x=0),
xaxis = list(title = 'Year', tick0=1950, dtick=10),
yaxis = list (title = 'Log productivity'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/pwt-apply-gtfp-chn.html",selfcontained = F, libdir = "lib")
m2 <- lm(f$lntfp~f$year, data=f, subset=(year>1962 & year<2006))
m3 <- lm(f$lntfp~f$year, data=f, subset=(year>2006 & year<2019))
f$fitted2 <- predict(m2,f)
f$fitted3 <- predict(m3,f)
fig <- plot_ly(f, x = ~year, y = ~lntfp, linetype = ~isocode, type = 'scatter', mode = 'lines+markers')
fig <- fig %>% add_trace(y = ~fitted2, name = 'Early BGP?',mode = 'lines')
fig <- fig %>% add_trace(y = ~fitted3, name = 'New BGP?',mode = 'lines')
fig <- layout(fig, title = list(text = 'Level of productivity', x=0),
xaxis = list(title = 'Year', tick0=1950, dtick=10),
yaxis = list (title = 'Log productivity'),
hovermode="x unified")
saveWidget(partial_bundle(fig), "../plotly/pwt-apply-gtfp-chn.html",selfcontained = F, libdir = "lib")
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_PWT_Correlation.r")
# Simple correlation plots for pop growth and gross capital formation
#########################################################################
# Pull PWT into dataframe
data("pwt10.01")
p <- pwt10.01 # copy dataframe for manipulation
p$lngdppc <- round(log(p$rgdpna) - log(p$pop),digits=2) # create log GDP per capita
p$sgov<- round(p$csh_g,digits=2)
fig <- plot_ly(all, x = ~sgov, y = ~g10.lngdppc, color = ~country, type = 'scatter', mode='markers', colors = "Set1")
library(pwt10)
data("pwt10.01")
# Simple correlation plots for pop growth and gross capital formation
#########################################################################
# Pull PWT into dataframe
data("pwt10.01")
p <- pwt10.01 # copy dataframe for manipulation
p$lngdppc <- round(log(p$rgdpna) - log(p$pop),digits=2) # create log GDP per capita
p$sgov<- round(p$csh_g,digits=2)
# Simple correlation plots for pop growth and gross capital formation
#########################################################################
# Pull PWT into dataframe
data("pwt10.01")
p <- pwt10.01 # copy dataframe for manipulation
p$lngdppc <- round(log(p$rgdpna) - log(p$pop),digits=2) # create log GDP per capita
p$sgov<- round(p$csh_g,digits=2)
p <-
p %>%
group_by(isocode) %>%
mutate(lag10.lngdppc = dplyr::lag(lngdppc, n = 10, default = NA))
p$g10.lngdppc <- (p$lngdppc - p$lag10.lngdppc)/10
fig <- plot_ly(all, x = ~sgov, y = ~g10.lngdppc, color = ~country, type = 'scatter', mode='markers', colors = "Set1")
# Simple correlation plots for pop growth and gross capital formation
#########################################################################
# Pull PWT into dataframe
data("pwt10.01")
p <- pwt10.01 # copy dataframe for manipulation
p$lngdppc <- round(log(p$rgdpna) - log(p$pop),digits=2) # create log GDP per capita
p$sgov<- round(p$csh_g,digits=2)
p <-
p %>%
group_by(isocode) %>%
mutate(lag10.lngdppc = dplyr::lag(lngdppc, n = 10, default = NA))
p$g10.lngdppc <- (p$lngdppc - p$lag10.lngdppc)/10
fig <- plot_ly(p, x = ~sgov, y = ~g10.lngdppc, color = ~country, type = 'scatter', mode='markers', colors = "Set1")
fig <- layout(fig, title = list(text = 'Government and growth', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = '10-year growth rate'))
fig
# Simple correlation plots for pop growth and gross capital formation
#########################################################################
# Pull PWT into dataframe
data("pwt10.01")
p <- pwt10.01 # copy dataframe for manipulation
p$lngdppc <- round(log(p$rgdpna) - log(p$pop),digits=2) # create log GDP per capita
p$sgov<- round(p$csh_g,digits=2)
p <-
p %>%
group_by(isocode) %>%
mutate(lag10.lngdppc = dplyr::lag(lngdppc, n = 10, default = NA))
p$g10.lngdppc <- (p$lngdppc - p$lag10.lngdppc)/10
all <- p[which(p$isocode %in% c("USA", "MEX", "DEU","JPN","KOR","CHN")),]
fig <- plot_ly(all, x = ~sgov, y = ~g10.lngdppc, color = ~country, type = 'scatter', mode='markers', colors = "Set1")
fig <- layout(fig, title = list(text = 'Government and growth', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = '10-year growth rate'))
#api_create(fig, filename = "pwt-all-cshg-growth")
fig
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_PWT_Govt.r")
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_PWT_Govt.r")
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_PWT_Govt.r")
fig <- plot_ly(us, x = ~lagyear, y = ~g10.lngdppc, type = 'scatter', mode='lines+markers', colors = "Set1")
fig <- layout(fig, title = list(text = '10-year growth rate', x=0),
xaxis = list(title = 'Year'),
yaxis = list (title = '10-year growth rate', range=c(0,.04)))
fig <- plot_ly(us, x = ~lagyear, y = ~g10.lnpop, type = 'scatter', mode='lines+markers', colors = "Set1")
fig <- layout(fig, title = list(text = '10-year population growth rate', x=0),
xaxis = list(title = 'Year'),
yaxis = list (title = '10-year growth rate', range=c(0,.04)))
saveWidget(partial_bundle(fig), "../plotly/pwt-usa-pop-growth.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(us, x = ~lagyear, y = ~g10.lngdppc, type = 'scatter', mode='lines+markers', colors = "Set1")
fig <- layout(fig, title = list(text = '10-year growth rate', x=0),
xaxis = list(title = 'Year'),
yaxis = list (title = '10-year growth rate', range=c(0,.04)))
saveWidget(partial_bundle(fig), "../plotly/pwt-usa-growth-rate.html",selfcontained = F, libdir = "lib")
source("~/Library/CloudStorage/Dropbox/Project/StudyGuide/code/Guide_PWT_Govt.r")
# Additional figures for govt, US specifics
#########################################################################
# Pull PWT into dataframe
data("pwt10.01")
p <- pwt10.01 # copy dataframe for manipulation
p$lngdppc <- round(log(p$rgdpna) - log(p$pop),digits=3) # create log GDP per capita
p$lnpop <- round(log(p$pop),digits=3) # create log GDP per capita
p$sgov<- round(p$csh_g,digits=3)
p$lagyear <- p$year-10
p <-
p %>%
group_by(isocode) %>%
mutate(lag10.lngdppc = dplyr::lag(lngdppc, n = 10, default = NA))
p$g10.lngdppc <- (p$lngdppc - p$lag10.lngdppc)/10
p <-
p %>%
group_by(isocode) %>%
mutate(lag10.lnpop = dplyr::lag(lnpop, n = 10, default = NA))
p$g10.lnpop <- (p$lnpop - p$lag10.lnpop)/10
all <- p[which(p$isocode %in% c("USA", "MEX", "DEU","JPN","KOR","CHN")),]
fig <- plot_ly(all, x = ~sgov, y = ~g10.lngdppc, color = ~country, type = 'scatter', mode='markers', colors = "Set1")
fig <- layout(fig, title = list(text = 'Government and growth', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = '10-year growth rate'))
saveWidget(partial_bundle(fig), "../plotly/pwt-all-cshg-growth.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(all, x = ~sgov, y = ~lngdppc, color = ~country, type = 'scatter', mode='markers', colors = "Set1")
fig <- layout(fig, title = list(text = 'Government and level of GDP per capita', x=0),
xaxis = list(title = 'Gov. spending share of GDP'),
yaxis = list (title = 'Log GDP per capita'))
saveWidget(partial_bundle(fig), "../plotly/pwt-all-cshg-level.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(all, x = ~csh_x, y = ~lngdppc, color = ~country, type = 'scatter', mode='markers', colors = "Set1")
fig <- layout(fig, title = list(text = 'Exports and level of GDP per capita', x=0),
xaxis = list(title = 'Exports as share of GDP'),
yaxis = list (title = 'Log GDP per capita'))
saveWidget(partial_bundle(fig), "../plotly/pwt-all-export-level.html",selfcontained = F, libdir = "lib")
#api_create(fig, filename = "pwt-all-export-level")
fig <- plot_ly(all, x = ~csh_mabs, y = ~lngdppc, color = ~country, type = 'scatter', mode='markers', colors = "Set1")
fig <- layout(fig, title = list(text = 'Imports and level of GDP per capita', x=0),
xaxis = list(title = 'Imports as share of GDP'),
yaxis = list (title = 'Log GDP per capita'))
#api_create(fig, filename = "pwt-all-imports-level")
saveWidget(partial_bundle(fig), "../plotly/pwt-all-imports-level.html",selfcontained = F, libdir = "lib")
fig <- plot_ly(all, x = ~csh_m, y = ~lngdppc, color = ~country, type = 'scatter', mode='markers', colors = "Set1")
fig <- layout(fig, title = list(text = 'Imports and level of GDP per capita', x=0),
xaxis = list(title = 'Imports as share of GDP'),
yaxis = list (title = 'Log GDP per capita'))
#api_create(fig, filename = "pwt-all-imports-level")
saveWidget(partial_bundle(fig), "../plotly/pwt-all-imports-level.html",selfcontained = F, libdir = "lib")
all$csh_mabs <- abs(all$csh_m)
fig <- plot_ly(all, x = ~csh_mabs, y = ~lngdppc, color = ~country, type = 'scatter', mode='markers', colors = "Set1")
fig <- layout(fig, title = list(text = 'Imports and level of GDP per capita', x=0),
xaxis = list(title = 'Imports as share of GDP'),
yaxis = list (title = 'Log GDP per capita'))
#api_create(fig, filename = "pwt-all-imports-level")
saveWidget(partial_bundle(fig), "../plotly/pwt-all-imports-level.html",selfcontained = F, libdir = "lib")
